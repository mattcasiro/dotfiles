#!/bin/bash

# Assumptions:
# - Stash API user is set in environment as STASH_USERNAME
# - Stash API token is set in environment as STASH_PASSWORD
# - jq is installed
# - PWD is important, use the repo to get the full hash if a short one was provided

# Get the full hash from a short one
HASH=$(git log "$1" -1 --pretty=oneline | awk '{print $1}')
echo "Full hash is ${HASH}"

JSON=$(curl -sSLf -u"${STASH_USERNAME}:${STASH_PASSWORD}" "https://stash.benevity.org/rest/build-status/latest/commits/${HASH}?limit=500")

echo $JSON; echo
# all builds
FIX_JSON=$(echo "${JSON}" | jq '.values | map(select(.state != "SUCCESSFUL"))' | sed -e 's/"state":.*/"state": "SUCCESSFUL",/')
# uncomment to do only snyk builds
#FIX_JSON=$(echo "${JSON}" | jq '.values | map(select(.state != "SUCCESSFUL")) | map(select(.name | contains ("snyk")))' | sed -e 's/"state":.*/"state": "SUCCESSFUL",/')

FIX_COUNT=$(echo "${FIX_JSON}" | jq '. | length')
FIX_COUNT=$((FIX_COUNT - 1))

for i in $(seq 0 "${FIX_COUNT}"); do
  echo "${i}"
  BUILD=$(echo "${FIX_JSON}" | jq ".[${i}]")
  curl -sSf -u"${STASH_USERNAME}:${STASH_PASSWORD}" \
    -H 'Content-Type: application/json' \
    "https://stash.benevity.org/rest/build-status/latest/commits/${HASH}" \
    -d "${BUILD}"
done

# Check the result
curl -s -u"${STASH_USERNAME}:${STASH_PASSWORD}" "https://stash.benevity.org/rest/build-status/latest/commits/${HASH}" | jq
